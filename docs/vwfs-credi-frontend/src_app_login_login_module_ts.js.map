{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../shared/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { SysMsgrComponent } from '../shared/sys-msgr/sys-msgr.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: []\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  hide = true; //password visibility\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private route: Router,\r\n    private snackbar: SysMsgrComponent)\r\n    {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n async onSubmit(): Promise<void> {\r\n    if (this.loginForm.valid) {\r\n      const username = this.loginForm.value.username;\r\n      const password = this.loginForm.value.password;\r\n\r\n      // Call the AuthService's login method\r\n      await this.authService.login(username, password);\r\n      if (this.authService.isAuthenticatedUser()) {\r\n        //successful login\r\n        this.snackbar.openSnackbar('Ingresaste', 5000);\r\n        this.route.navigateByUrl('/main-frame');\r\n\r\n      } else {\r\n        //bad login\r\n        this.snackbar.openSnackbar('revisa el user y la pass :(', 5000);\r\n      }\r\n    }\r\n  }\r\n}\r\n","<!-- login -->\r\n<div class=\"login-container\">\r\n  <div class=\"login-card\">\r\n    <div class=\"login-header\">\r\n      <div class=\"logo_box\"></div>\r\n      <h1 class=\"title\">\r\n        VWFS Backoffice te da la Bienvenida</h1>\r\n      <h3 class=\"subtitle\">\r\n        Ingresa tus credenciales para iniciar sesión\r\n      </h3>\r\n    </div>\r\n\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Ingresa tu Usuario</mat-label>\r\n        <input matInput formControlName=\"username\" placeholder=\"Usuario\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Ingresa tu Contraseña</mat-label>\r\n        <input matInput formControlName=\"password\" type=\"password\" [type]=\"hide ? 'password' : 'text'\"\r\n          placeholder=\"Contraseña\">\r\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n          [attr.aria-pressed]=\"hide\" type=\"button\">\r\n          <mat-icon fontSet=\"material-symbols-outlined\">{{ hide ? 'visibility_off' : 'visibility' }}</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <button class=\"accent-btn\" mat-button type=\"submit\">Ingresar al Sistema</button>\r\n      <p>Si olvidaste tu clave, <a href=\"\">hacé click aquí</a></p>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    LoginRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule\r\n  ]\r\n})\r\n\r\nexport class LoginModule { }\r\n"],"names":["RouterModule","LoginComponent","routes","path","component","LoginRoutingModule","forChild","imports","exports","Validators","constructor","formBuilder","authService","route","snackbar","loginForm","group","username","required","password","ngOnInit","onSubmit","valid","value","login","isAuthenticatedUser","openSnackbar","navigateByUrl","selectors","decls","vars","consts","template","i0","ctx","CommonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatButtonModule","MatIconModule","LoginModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}