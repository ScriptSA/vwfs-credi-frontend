{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.config.ts","./src/app/app.module.ts","./src/app/shared/sys-msgr/sys-msgr.component.ts","./src/environments/environment.scriptServer.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', loadChildren: () => import('../app/login/login.module').then(m => m.LoginModule)},\r\n  { path: 'main-frame', loadChildren: () => import('../app/main-frame/main-frame.module').then(m => m.MainFrameModule)},\r\n  // Add more routes for different roles as necessary\r\n  { path: '**', redirectTo: '/login', pathMatch: 'full' } // Redirect unmatched routes to login\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppComponent {\r\n  title = 'vwfs-credi-frontend';\r\n\r\n}\r\n","<!-- app-content -->\r\n<router-outlet></router-outlet>\r\n\r\n\r\n","import { Injectable,APP_INITIALIZER } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\nimport { IAppConfig } from './shared/models/app-config.model';\r\nimport { HttpClient, HttpBackend } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AppConfig {\r\n\r\n  static settings: IAppConfig;\r\n  private httpClient: HttpClient;\r\n\r\n\r\n    constructor(private handler: HttpBackend) {\r\n      this.httpClient = new HttpClient(handler);\r\n    }\r\n\r\n    load() {\r\n        const jsonFile = `assets/config/config.${environment.name}.json`;\r\n        return new Promise<void>((resolve, reject) => {\r\n          this.httpClient.get<any>(jsonFile).subscribe(response => {\r\n               AppConfig.settings = <IAppConfig>response;\r\n               resolve();\r\n            });\r\n        });\r\n    }\r\n}\r\nexport function ConfigFactory(config: AppConfig) {\r\n  return () => config.load();\r\n}\r\n\r\nexport function init() {\r\n  return {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: ConfigFactory,\r\n      deps: [AppConfig],\r\n      multi: true\r\n  }\r\n}\r\n\r\nconst ConfigModule = {\r\n  init: init\r\n}\r\n\r\nexport { ConfigModule };\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SysMsgrComponent } from './shared/sys-msgr/sys-msgr.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { HttpClientModule  } from '@angular/common/http';\r\nimport { AppConfig, ConfigModule } from './app.config';\r\nimport { CustomCapitalizePipe } from './shared/pipes/custom-capitalize.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SysMsgrComponent,\r\n    \r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatSnackBarModule,\r\n    HttpClientModule,\r\n  ],\r\n\r\n  providers: [SysMsgrComponent, AppConfig,ConfigModule.init()],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-sys-msgr',\r\n  template: ``,\r\n})\r\nexport class SysMsgrComponent {\r\n  constructor(private snackBar: MatSnackBar) {}\r\n\r\n  openSnackbar(message: string, duration: number = 3000): void {\r\n    this.snackBar.open(message, 'Close', {\r\n      duration: duration,\r\n    });\r\n  }\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  name: 'scriptServer',\r\n  version: '0.1.00000.000'\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","path","loadChildren","then","m","LoginModule","MainFrameModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","APP_INITIALIZER","environment","HttpClient","AppConfig","handler","httpClient","load","jsonFile","name","Promise","resolve","reject","get","subscribe","response","settings","factory","ConfigFactory","config","init","provide","useFactory","deps","multi","ConfigModule","BrowserModule","BrowserAnimationsModule","SysMsgrComponent","MatSnackBarModule","HttpClientModule","AppModule","bootstrap","declarations","snackBar","openSnackbar","message","duration","open","encapsulation","production","version","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}